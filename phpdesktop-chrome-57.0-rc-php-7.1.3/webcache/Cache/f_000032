<!DOCTYPE html>
<html>
    <head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>

		Errors</title>
	<!-- Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

<!-- Styles -->
<style>
    /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-t{border-top-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@media (min-width:640px){.sm\:rounded-lg{border-radius:.5rem}.sm\:block{display:block}.sm\:items-center{align-items:center}.sm\:justify-start{justify-content:flex-start}.sm\:justify-between{justify-content:space-between}.sm\:h-20{height:5rem}.sm\:ml-0{margin-left:0}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:pt-0{padding-top:0}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width:768px){.md\:border-t-0{border-top-width:0}.md\:border-l{border-left-width:1px}.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.dark\:text-gray-500{--tw-text-opacity:1;color:#6b7280;color:rgba(107,114,128,var(--tw-text-opacity))}}
</style>

<style>
    body {
        font-family: 'Nunito', sans-serif;
    }
</style>
<link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/offcanvas-navbar/">
 <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
<style>
    .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
    }

    @media (min-width: 768px) {
        .bd-placeholder-img-lg {
            font-size: 3.5rem;
        }
    }
</style>	
    </head>
    <body class="bg-light">
        <main class="container">    
            <div class="card">

                <ul class="nav nav-pills">
                    <li class="nav-item">
                        <a class="nav-link" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                            Produtos
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <li><a class="dropdown-item" href="/index.php/users/users/">Listar</a></li>
                            <li><a class="dropdown-item"  href="/index.php/users/users/produtos/add">Cadastrar</a></li>
                        </ul>
                    </li>

                    <li class="nav-item ms-auto p-2 bd-highlight">
                        -                     </li>
                    <li>
                        <button class="nav-item">
                            <a href = /index.php/users/users/users/logout>     
                                sair
                                <i class="bi bi-power"></i>
                            </a>
                        </button>
                    </li>
                </ul>
            </div>
            <div class="my-3 p-3 bg-body rounded shadow-sm">

        	<h2>Missing Method in UsersController</h2> <p class="error">
	<strong>Error: </strong>
	The action <em>users</em> is not defined in controller <em>UsersController</em></p>
<p class="error">
	<strong>Error: </strong>
	Create <em>UsersController::</em><em>users()</em> in file: app\Controller\UsersController.php.</p>
<pre>
&lt;?php
class UsersController extends AppController {

<strong>
	public function users() {

	}
</strong>
}
</pre>
<p class="notice">
	<strong>Notice: </strong>
	If you want to customize this error message, create app\View\Errors\missing_action.ctp</p>
<h3>Stack Trace</h3>
<ul class="cake-stack-trace">
	<li><a href="#" onclick="traceToggle(event, 'file-excerpt-0')">CORE\Cake\Routing\Dispatcher.php line 193</a> &rarr; <a href="#" onclick="traceToggle(event, 'trace-args-0')">Controller->invokeAction(CakeRequest)</a> <div id="file-excerpt-0" class="cake-code-dump" style="display:none;"><pre><code><span style="color: #000000"><span style="color: #0000BB"></span></span></code>
<code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">$controller</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">response</span><span style="color: #007700">;</span></span></code>
<code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$render&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">true</span><span style="color: #007700">;</span></span></code>
<span class="code-highlight"><code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">$controller</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">invokeAction</span><span style="color: #007700">(</span><span style="color: #0000BB">$request</span><span style="color: #007700">);</span></span></code></span>
<code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(</span><span style="color: #0000BB">$result&nbsp;</span><span style="color: #007700">instanceof&nbsp;</span><span style="color: #0000BB">CakeResponse</span><span style="color: #007700">)&nbsp;{</span></span></code></pre></div> <div id="trace-args-0" class="cake-code-dump" style="display: none;"><pre>object(CakeRequest) {
	params =&gt; array(
		&#039;plugin&#039; =&gt; null,
		&#039;controller&#039; =&gt; &#039;users&#039;,
		&#039;action&#039; =&gt; &#039;users&#039;,
		&#039;named&#039; =&gt; array(),
		&#039;pass&#039; =&gt; array(
			(int) 0 =&gt; &#039;login&#039;
		)
	)
	data =&gt; array(
		&#039;User&#039; =&gt; array(
			&#039;password&#039; =&gt; &#039;*****&#039;,
			&#039;name&#039; =&gt; &#039;admin&#039;
		)
	)
	query =&gt; array()
	url =&gt; &#039;users/users/login&#039;
	base =&gt; &#039;/index.php/users/users&#039;
	webroot =&gt; &#039;/index.php/users/users/&#039;
	here =&gt; &#039;/index.php/users/users/users/users/login&#039;
	[protected] _detectors =&gt; array(
		&#039;get&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;GET&#039;
		),
		&#039;patch&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;PATCH&#039;
		),
		&#039;post&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;POST&#039;
		),
		&#039;put&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;PUT&#039;
		),
		&#039;delete&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;DELETE&#039;
		),
		&#039;head&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;HEAD&#039;
		),
		&#039;options&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;OPTIONS&#039;
		),
		&#039;ssl&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTPS&#039;,
			&#039;value&#039; =&gt; (int) 1
		),
		&#039;ajax&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_X_REQUESTED_WITH&#039;,
			&#039;value&#039; =&gt; &#039;XMLHttpRequest&#039;
		),
		&#039;flash&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_USER_AGENT&#039;,
			&#039;pattern&#039; =&gt; &#039;/^(Shockwave|Adobe) Flash/&#039;
		),
		&#039;mobile&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_USER_AGENT&#039;,
			&#039;options&#039; =&gt; array(
				[maximum depth reached]
			)
		),
		&#039;requested&#039; =&gt; array(
			&#039;param&#039; =&gt; &#039;requested&#039;,
			&#039;value&#039; =&gt; (int) 1
		),
		&#039;json&#039; =&gt; array(
			&#039;accept&#039; =&gt; array(
				[maximum depth reached]
			),
			&#039;param&#039; =&gt; &#039;ext&#039;,
			&#039;value&#039; =&gt; &#039;json&#039;
		),
		&#039;xml&#039; =&gt; array(
			&#039;accept&#039; =&gt; array(
				[maximum depth reached]
			),
			&#039;param&#039; =&gt; &#039;ext&#039;,
			&#039;value&#039; =&gt; &#039;xml&#039;
		)
	)
	[protected] _input =&gt; &#039;&#039;
}</pre></div></li>
	<li><a href="#" onclick="traceToggle(event, 'file-excerpt-1')">CORE\Cake\Routing\Dispatcher.php line 167</a> &rarr; <a href="#" onclick="traceToggle(event, 'trace-args-1')">Dispatcher->_invoke(UsersController, CakeRequest)</a> <div id="file-excerpt-1" class="cake-code-dump" style="display:none;"><pre><code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">));</span></span></code>
<code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">}</span></span></code>
<code><span style="color: #000000"><span style="color: #0000BB"></span></span></code>
<span class="code-highlight"><code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$response&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">_invoke</span><span style="color: #007700">(</span><span style="color: #0000BB">$controller</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$request</span><span style="color: #007700">);</span></span></code></span>
<code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">if&nbsp;(isset(</span><span style="color: #0000BB">$request</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">params</span><span style="color: #007700">[</span><span style="color: #DD0000">'return'</span><span style="color: #007700">]))&nbsp;{</span></span></code></pre></div> <div id="trace-args-1" class="cake-code-dump" style="display: none;"><pre>object(UsersController) {
	components =&gt; array(
		&#039;Auth&#039; =&gt; null,
		&#039;Session&#039; =&gt; null,
		&#039;Paginator&#039; =&gt; null
	)
	helpers =&gt; array(
		(int) 0 =&gt; &#039;Form&#039;,
		(int) 1 =&gt; &#039;Html&#039;
	)
	name =&gt; &#039;Users&#039;
	uses =&gt; array(
		(int) 0 =&gt; &#039;User&#039;
	)
	request =&gt; object(CakeRequest) {
		params =&gt; array(
			[maximum depth reached]
		)
		data =&gt; array(
			[maximum depth reached]
		)
		query =&gt; array([maximum depth reached])
		url =&gt; &#039;users/users/login&#039;
		base =&gt; &#039;/index.php/users/users&#039;
		webroot =&gt; &#039;/index.php/users/users/&#039;
		here =&gt; &#039;/index.php/users/users/users/users/login&#039;
		[protected] _detectors =&gt; array(
			[maximum depth reached]
		)
		[protected] _input =&gt; &#039;&#039;
	}
	response =&gt; object(CakeResponse) {
		[protected] _statusCodes =&gt; array(
			[maximum depth reached]
		)
		[protected] _mimeTypes =&gt; array(
			[maximum depth reached]
		)
		[protected] _protocol =&gt; &#039;HTTP/1.1&#039;
		[protected] _status =&gt; (int) 200
		[protected] _contentType =&gt; &#039;text/html&#039;
		[protected] _headers =&gt; array([maximum depth reached])
		[protected] _body =&gt; null
		[protected] _file =&gt; null
		[protected] _fileRange =&gt; null
		[protected] _charset =&gt; &#039;UTF-8&#039;
		[protected] _cacheDirectives =&gt; array([maximum depth reached])
		[protected] _cookies =&gt; array([maximum depth reached])
	}
	viewPath =&gt; &#039;Users&#039;
	layoutPath =&gt; null
	viewVars =&gt; array()
	view =&gt; &#039;users&#039;
	layout =&gt; &#039;default&#039;
	autoRender =&gt; true
	autoLayout =&gt; true
	Components =&gt; object(ComponentCollection) {
		defaultPriority =&gt; (int) 10
		[protected] _Controller =&gt; object(UsersController) {}
		[protected] _enabled =&gt; array(
			[maximum depth reached]
		)
		[protected] _loaded =&gt; array(
			[maximum depth reached]
		)
	}
	viewClass =&gt; &#039;View&#039;
	View =&gt; null
	ext =&gt; &#039;.ctp&#039;
	plugin =&gt; null
	cacheAction =&gt; false
	passedArgs =&gt; array(
		(int) 0 =&gt; &#039;login&#039;
	)
	scaffold =&gt; false
	methods =&gt; array(
		(int) 0 =&gt; &#039;view&#039;,
		(int) 1 =&gt; &#039;add&#039;,
		(int) 2 =&gt; &#039;edit&#039;,
		(int) 3 =&gt; &#039;delete&#039;,
		(int) 4 =&gt; &#039;login&#039;,
		(int) 5 =&gt; &#039;logout&#039;,
		(int) 7 =&gt; &#039;isAuthorized&#039;
	)
	modelClass =&gt; &#039;User&#039;
	modelKey =&gt; &#039;user&#039;
	validationErrors =&gt; null
	Auth =&gt; object(AuthComponent) {
		components =&gt; array(
			[maximum depth reached]
		)
		authenticate =&gt; array(
			[maximum depth reached]
		)
		authorize =&gt; &#039;Controller&#039;
		ajaxLogin =&gt; null
		flash =&gt; array(
			[maximum depth reached]
		)
		loginAction =&gt; array(
			[maximum depth reached]
		)
		loginRedirect =&gt; array(
			[maximum depth reached]
		)
		logoutRedirect =&gt; array(
			[maximum depth reached]
		)
		authError =&gt; null
		unauthorizedRedirect =&gt; true
		allowedActions =&gt; array(
			[maximum depth reached]
		)
		request =&gt; object(CakeRequest) {}
		response =&gt; object(CakeResponse) {}
		settings =&gt; array([maximum depth reached])
		error =&gt; &#039;Erro , você não logou!&#039;
		[protected] _authenticateObjects =&gt; array([maximum depth reached])
		[protected] _authorizeObjects =&gt; array([maximum depth reached])
		[protected] _user =&gt; array([maximum depth reached])
		[protected] _methods =&gt; array(
			[maximum depth reached]
		)
		[protected] _Collection =&gt; object(ComponentCollection) {}
		[protected] _componentMap =&gt; array(
			[maximum depth reached]
		)
	}
	Session =&gt; object(SessionComponent) {
		settings =&gt; array([maximum depth reached])
		components =&gt; array([maximum depth reached])
		[protected] _Collection =&gt; object(ComponentCollection) {}
		[protected] _componentMap =&gt; array([maximum depth reached])
	}
	Paginator =&gt; object(PaginatorComponent) {
		settings =&gt; array(
			[maximum depth reached]
		)
		whitelist =&gt; array(
			[maximum depth reached]
		)
		components =&gt; array([maximum depth reached])
		Controller =&gt; object(UsersController) {}
		[protected] _Collection =&gt; object(ComponentCollection) {}
		[protected] _componentMap =&gt; array([maximum depth reached])
	}
	[protected] _responseClass =&gt; &#039;CakeResponse&#039;
	[protected] _mergeParent =&gt; &#039;AppController&#039;
	[protected] _eventManager =&gt; object(CakeEventManager) {
		[protected] _generalManager =&gt; object(CakeEventManager) {}
		[protected] _listeners =&gt; array(
			[maximum depth reached]
		)
		[protected] _isGlobal =&gt; false
	}
}
object(CakeRequest) {
	params =&gt; array(
		&#039;plugin&#039; =&gt; null,
		&#039;controller&#039; =&gt; &#039;users&#039;,
		&#039;action&#039; =&gt; &#039;users&#039;,
		&#039;named&#039; =&gt; array(),
		&#039;pass&#039; =&gt; array(
			(int) 0 =&gt; &#039;login&#039;
		)
	)
	data =&gt; array(
		&#039;User&#039; =&gt; array(
			&#039;password&#039; =&gt; &#039;*****&#039;,
			&#039;name&#039; =&gt; &#039;admin&#039;
		)
	)
	query =&gt; array()
	url =&gt; &#039;users/users/login&#039;
	base =&gt; &#039;/index.php/users/users&#039;
	webroot =&gt; &#039;/index.php/users/users/&#039;
	here =&gt; &#039;/index.php/users/users/users/users/login&#039;
	[protected] _detectors =&gt; array(
		&#039;get&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;GET&#039;
		),
		&#039;patch&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;PATCH&#039;
		),
		&#039;post&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;POST&#039;
		),
		&#039;put&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;PUT&#039;
		),
		&#039;delete&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;DELETE&#039;
		),
		&#039;head&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;HEAD&#039;
		),
		&#039;options&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;OPTIONS&#039;
		),
		&#039;ssl&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTPS&#039;,
			&#039;value&#039; =&gt; (int) 1
		),
		&#039;ajax&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_X_REQUESTED_WITH&#039;,
			&#039;value&#039; =&gt; &#039;XMLHttpRequest&#039;
		),
		&#039;flash&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_USER_AGENT&#039;,
			&#039;pattern&#039; =&gt; &#039;/^(Shockwave|Adobe) Flash/&#039;
		),
		&#039;mobile&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_USER_AGENT&#039;,
			&#039;options&#039; =&gt; array(
				[maximum depth reached]
			)
		),
		&#039;requested&#039; =&gt; array(
			&#039;param&#039; =&gt; &#039;requested&#039;,
			&#039;value&#039; =&gt; (int) 1
		),
		&#039;json&#039; =&gt; array(
			&#039;accept&#039; =&gt; array(
				[maximum depth reached]
			),
			&#039;param&#039; =&gt; &#039;ext&#039;,
			&#039;value&#039; =&gt; &#039;json&#039;
		),
		&#039;xml&#039; =&gt; array(
			&#039;accept&#039; =&gt; array(
				[maximum depth reached]
			),
			&#039;param&#039; =&gt; &#039;ext&#039;,
			&#039;value&#039; =&gt; &#039;xml&#039;
		)
	)
	[protected] _input =&gt; &#039;&#039;
}</pre></div></li>
	<li><a href="#" onclick="traceToggle(event, 'file-excerpt-2')">APP\webroot\index.php line 117</a> &rarr; <a href="#" onclick="traceToggle(event, 'trace-args-2')">Dispatcher->dispatch(CakeRequest, CakeResponse)</a> <div id="file-excerpt-2" class="cake-code-dump" style="display:none;"><pre><code><span style="color: #000000"><span style="color: #0000BB">$Dispatcher&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #0000BB">Dispatcher</span><span style="color: #007700">();</span></span></code>
<code><span style="color: #000000"><span style="color: #0000BB">$Dispatcher</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">dispatch</span><span style="color: #007700">(</span></span></code>
<code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">new&nbsp;</span><span style="color: #0000BB">CakeRequest</span><span style="color: #007700">(),</span></span></code>
<span class="code-highlight"><code><span style="color: #000000"><span style="color: #0000BB">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">new&nbsp;</span><span style="color: #0000BB">CakeResponse</span><span style="color: #007700">()</span></span></code></span>
<code><span style="color: #000000"><span style="color: #0000BB"></span><span style="color: #007700">);</span></span></code></pre></div> <div id="trace-args-2" class="cake-code-dump" style="display: none;"><pre>object(CakeRequest) {
	params =&gt; array(
		&#039;plugin&#039; =&gt; null,
		&#039;controller&#039; =&gt; &#039;users&#039;,
		&#039;action&#039; =&gt; &#039;users&#039;,
		&#039;named&#039; =&gt; array(),
		&#039;pass&#039; =&gt; array(
			(int) 0 =&gt; &#039;login&#039;
		)
	)
	data =&gt; array(
		&#039;User&#039; =&gt; array(
			&#039;password&#039; =&gt; &#039;*****&#039;,
			&#039;name&#039; =&gt; &#039;admin&#039;
		)
	)
	query =&gt; array()
	url =&gt; &#039;users/users/login&#039;
	base =&gt; &#039;/index.php/users/users&#039;
	webroot =&gt; &#039;/index.php/users/users/&#039;
	here =&gt; &#039;/index.php/users/users/users/users/login&#039;
	[protected] _detectors =&gt; array(
		&#039;get&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;GET&#039;
		),
		&#039;patch&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;PATCH&#039;
		),
		&#039;post&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;POST&#039;
		),
		&#039;put&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;PUT&#039;
		),
		&#039;delete&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;DELETE&#039;
		),
		&#039;head&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;HEAD&#039;
		),
		&#039;options&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;REQUEST_METHOD&#039;,
			&#039;value&#039; =&gt; &#039;OPTIONS&#039;
		),
		&#039;ssl&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTPS&#039;,
			&#039;value&#039; =&gt; (int) 1
		),
		&#039;ajax&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_X_REQUESTED_WITH&#039;,
			&#039;value&#039; =&gt; &#039;XMLHttpRequest&#039;
		),
		&#039;flash&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_USER_AGENT&#039;,
			&#039;pattern&#039; =&gt; &#039;/^(Shockwave|Adobe) Flash/&#039;
		),
		&#039;mobile&#039; =&gt; array(
			&#039;env&#039; =&gt; &#039;HTTP_USER_AGENT&#039;,
			&#039;options&#039; =&gt; array(
				[maximum depth reached]
			)
		),
		&#039;requested&#039; =&gt; array(
			&#039;param&#039; =&gt; &#039;requested&#039;,
			&#039;value&#039; =&gt; (int) 1
		),
		&#039;json&#039; =&gt; array(
			&#039;accept&#039; =&gt; array(
				[maximum depth reached]
			),
			&#039;param&#039; =&gt; &#039;ext&#039;,
			&#039;value&#039; =&gt; &#039;json&#039;
		),
		&#039;xml&#039; =&gt; array(
			&#039;accept&#039; =&gt; array(
				[maximum depth reached]
			),
			&#039;param&#039; =&gt; &#039;ext&#039;,
			&#039;value&#039; =&gt; &#039;xml&#039;
		)
	)
	[protected] _input =&gt; &#039;&#039;
}
object(CakeResponse) {
	[protected] _statusCodes =&gt; array(
		(int) 100 =&gt; &#039;Continue&#039;,
		(int) 101 =&gt; &#039;Switching Protocols&#039;,
		(int) 200 =&gt; &#039;OK&#039;,
		(int) 201 =&gt; &#039;Created&#039;,
		(int) 202 =&gt; &#039;Accepted&#039;,
		(int) 203 =&gt; &#039;Non-Authoritative Information&#039;,
		(int) 204 =&gt; &#039;No Content&#039;,
		(int) 205 =&gt; &#039;Reset Content&#039;,
		(int) 206 =&gt; &#039;Partial Content&#039;,
		(int) 300 =&gt; &#039;Multiple Choices&#039;,
		(int) 301 =&gt; &#039;Moved Permanently&#039;,
		(int) 302 =&gt; &#039;Found&#039;,
		(int) 303 =&gt; &#039;See Other&#039;,
		(int) 304 =&gt; &#039;Not Modified&#039;,
		(int) 305 =&gt; &#039;Use Proxy&#039;,
		(int) 307 =&gt; &#039;Temporary Redirect&#039;,
		(int) 400 =&gt; &#039;Bad Request&#039;,
		(int) 401 =&gt; &#039;Unauthorized&#039;,
		(int) 402 =&gt; &#039;Payment Required&#039;,
		(int) 403 =&gt; &#039;Forbidden&#039;,
		(int) 404 =&gt; &#039;Not Found&#039;,
		(int) 405 =&gt; &#039;Method Not Allowed&#039;,
		(int) 406 =&gt; &#039;Not Acceptable&#039;,
		(int) 407 =&gt; &#039;Proxy Authentication Required&#039;,
		(int) 408 =&gt; &#039;Request Time-out&#039;,
		(int) 409 =&gt; &#039;Conflict&#039;,
		(int) 410 =&gt; &#039;Gone&#039;,
		(int) 411 =&gt; &#039;Length Required&#039;,
		(int) 412 =&gt; &#039;Precondition Failed&#039;,
		(int) 413 =&gt; &#039;Request Entity Too Large&#039;,
		(int) 414 =&gt; &#039;Request-URI Too Large&#039;,
		(int) 415 =&gt; &#039;Unsupported Media Type&#039;,
		(int) 416 =&gt; &#039;Requested range not satisfiable&#039;,
		(int) 417 =&gt; &#039;Expectation Failed&#039;,
		(int) 429 =&gt; &#039;Too Many Requests&#039;,
		(int) 500 =&gt; &#039;Internal Server Error&#039;,
		(int) 501 =&gt; &#039;Not Implemented&#039;,
		(int) 502 =&gt; &#039;Bad Gateway&#039;,
		(int) 503 =&gt; &#039;Service Unavailable&#039;,
		(int) 504 =&gt; &#039;Gateway Time-out&#039;,
		(int) 505 =&gt; &#039;Unsupported Version&#039;
	)
	[protected] _mimeTypes =&gt; array(
		&#039;html&#039; =&gt; array(
			(int) 0 =&gt; &#039;text/html&#039;,
			(int) 1 =&gt; &#039;*/*&#039;
		),
		&#039;json&#039; =&gt; &#039;application/json&#039;,
		&#039;xml&#039; =&gt; array(
			(int) 0 =&gt; &#039;application/xml&#039;,
			(int) 1 =&gt; &#039;text/xml&#039;
		),
		&#039;rss&#039; =&gt; &#039;application/rss+xml&#039;,
		&#039;ai&#039; =&gt; &#039;application/postscript&#039;,
		&#039;bcpio&#039; =&gt; &#039;application/x-bcpio&#039;,
		&#039;bin&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;ccad&#039; =&gt; &#039;application/clariscad&#039;,
		&#039;cdf&#039; =&gt; &#039;application/x-netcdf&#039;,
		&#039;class&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;cpio&#039; =&gt; &#039;application/x-cpio&#039;,
		&#039;cpt&#039; =&gt; &#039;application/mac-compactpro&#039;,
		&#039;csh&#039; =&gt; &#039;application/x-csh&#039;,
		&#039;csv&#039; =&gt; array(
			(int) 0 =&gt; &#039;text/csv&#039;,
			(int) 1 =&gt; &#039;application/vnd.ms-excel&#039;
		),
		&#039;dcr&#039; =&gt; &#039;application/x-director&#039;,
		&#039;dir&#039; =&gt; &#039;application/x-director&#039;,
		&#039;dms&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;doc&#039; =&gt; &#039;application/msword&#039;,
		&#039;docx&#039; =&gt; &#039;application/vnd.openxmlformats-officedocument.wordprocessingml.document&#039;,
		&#039;drw&#039; =&gt; &#039;application/drafting&#039;,
		&#039;dvi&#039; =&gt; &#039;application/x-dvi&#039;,
		&#039;dwg&#039; =&gt; &#039;application/acad&#039;,
		&#039;dxf&#039; =&gt; &#039;application/dxf&#039;,
		&#039;dxr&#039; =&gt; &#039;application/x-director&#039;,
		&#039;eot&#039; =&gt; &#039;application/vnd.ms-fontobject&#039;,
		&#039;eps&#039; =&gt; &#039;application/postscript&#039;,
		&#039;exe&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;ez&#039; =&gt; &#039;application/andrew-inset&#039;,
		&#039;flv&#039; =&gt; &#039;video/x-flv&#039;,
		&#039;gtar&#039; =&gt; &#039;application/x-gtar&#039;,
		&#039;gz&#039; =&gt; &#039;application/x-gzip&#039;,
		&#039;bz2&#039; =&gt; &#039;application/x-bzip&#039;,
		&#039;7z&#039; =&gt; &#039;application/x-7z-compressed&#039;,
		&#039;hdf&#039; =&gt; &#039;application/x-hdf&#039;,
		&#039;hqx&#039; =&gt; &#039;application/mac-binhex40&#039;,
		&#039;ico&#039; =&gt; &#039;image/x-icon&#039;,
		&#039;ips&#039; =&gt; &#039;application/x-ipscript&#039;,
		&#039;ipx&#039; =&gt; &#039;application/x-ipix&#039;,
		&#039;js&#039; =&gt; &#039;application/javascript&#039;,
		&#039;jsonapi&#039; =&gt; &#039;application/vnd.api+json&#039;,
		&#039;latex&#039; =&gt; &#039;application/x-latex&#039;,
		&#039;lha&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;lsp&#039; =&gt; &#039;application/x-lisp&#039;,
		&#039;lzh&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;man&#039; =&gt; &#039;application/x-troff-man&#039;,
		&#039;me&#039; =&gt; &#039;application/x-troff-me&#039;,
		&#039;mif&#039; =&gt; &#039;application/vnd.mif&#039;,
		&#039;ms&#039; =&gt; &#039;application/x-troff-ms&#039;,
		&#039;nc&#039; =&gt; &#039;application/x-netcdf&#039;,
		&#039;oda&#039; =&gt; &#039;application/oda&#039;,
		&#039;otf&#039; =&gt; &#039;font/otf&#039;,
		&#039;pdf&#039; =&gt; &#039;application/pdf&#039;,
		&#039;pgn&#039; =&gt; &#039;application/x-chess-pgn&#039;,
		&#039;pot&#039; =&gt; &#039;application/vnd.ms-powerpoint&#039;,
		&#039;pps&#039; =&gt; &#039;application/vnd.ms-powerpoint&#039;,
		&#039;ppt&#039; =&gt; &#039;application/vnd.ms-powerpoint&#039;,
		&#039;pptx&#039; =&gt; &#039;application/vnd.openxmlformats-officedocument.presentationml.presentation&#039;,
		&#039;ppz&#039; =&gt; &#039;application/vnd.ms-powerpoint&#039;,
		&#039;pre&#039; =&gt; &#039;application/x-freelance&#039;,
		&#039;prt&#039; =&gt; &#039;application/pro_eng&#039;,
		&#039;ps&#039; =&gt; &#039;application/postscript&#039;,
		&#039;roff&#039; =&gt; &#039;application/x-troff&#039;,
		&#039;scm&#039; =&gt; &#039;application/x-lotusscreencam&#039;,
		&#039;set&#039; =&gt; &#039;application/set&#039;,
		&#039;sh&#039; =&gt; &#039;application/x-sh&#039;,
		&#039;shar&#039; =&gt; &#039;application/x-shar&#039;,
		&#039;sit&#039; =&gt; &#039;application/x-stuffit&#039;,
		&#039;skd&#039; =&gt; &#039;application/x-koan&#039;,
		&#039;skm&#039; =&gt; &#039;application/x-koan&#039;,
		&#039;skp&#039; =&gt; &#039;application/x-koan&#039;,
		&#039;skt&#039; =&gt; &#039;application/x-koan&#039;,
		&#039;smi&#039; =&gt; &#039;application/smil&#039;,
		&#039;smil&#039; =&gt; &#039;application/smil&#039;,
		&#039;sol&#039; =&gt; &#039;application/solids&#039;,
		&#039;spl&#039; =&gt; &#039;application/x-futuresplash&#039;,
		&#039;src&#039; =&gt; &#039;application/x-wais-source&#039;,
		&#039;step&#039; =&gt; &#039;application/STEP&#039;,
		&#039;stl&#039; =&gt; &#039;application/SLA&#039;,
		&#039;stp&#039; =&gt; &#039;application/STEP&#039;,
		&#039;sv4cpio&#039; =&gt; &#039;application/x-sv4cpio&#039;,
		&#039;sv4crc&#039; =&gt; &#039;application/x-sv4crc&#039;,
		&#039;svg&#039; =&gt; &#039;image/svg+xml&#039;,
		&#039;svgz&#039; =&gt; &#039;image/svg+xml&#039;,
		&#039;swf&#039; =&gt; &#039;application/x-shockwave-flash&#039;,
		&#039;t&#039; =&gt; &#039;application/x-troff&#039;,
		&#039;tar&#039; =&gt; &#039;application/x-tar&#039;,
		&#039;tcl&#039; =&gt; &#039;application/x-tcl&#039;,
		&#039;tex&#039; =&gt; &#039;application/x-tex&#039;,
		&#039;texi&#039; =&gt; &#039;application/x-texinfo&#039;,
		&#039;texinfo&#039; =&gt; &#039;application/x-texinfo&#039;,
		&#039;tr&#039; =&gt; &#039;application/x-troff&#039;,
		&#039;tsp&#039; =&gt; &#039;application/dsptype&#039;,
		&#039;ttc&#039; =&gt; &#039;font/ttf&#039;,
		&#039;ttf&#039; =&gt; &#039;font/ttf&#039;,
		&#039;unv&#039; =&gt; &#039;application/i-deas&#039;,
		&#039;ustar&#039; =&gt; &#039;application/x-ustar&#039;,
		&#039;vcd&#039; =&gt; &#039;application/x-cdlink&#039;,
		&#039;vda&#039; =&gt; &#039;application/vda&#039;,
		&#039;xlc&#039; =&gt; &#039;application/vnd.ms-excel&#039;,
		&#039;xll&#039; =&gt; &#039;application/vnd.ms-excel&#039;,
		&#039;xlm&#039; =&gt; &#039;application/vnd.ms-excel&#039;,
		&#039;xls&#039; =&gt; &#039;application/vnd.ms-excel&#039;,
		&#039;xlsx&#039; =&gt; &#039;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#039;,
		&#039;xlw&#039; =&gt; &#039;application/vnd.ms-excel&#039;,
		&#039;zip&#039; =&gt; &#039;application/zip&#039;,
		&#039;aif&#039; =&gt; &#039;audio/x-aiff&#039;,
		&#039;aifc&#039; =&gt; &#039;audio/x-aiff&#039;,
		&#039;aiff&#039; =&gt; &#039;audio/x-aiff&#039;,
		&#039;au&#039; =&gt; &#039;audio/basic&#039;,
		&#039;kar&#039; =&gt; &#039;audio/midi&#039;,
		&#039;mid&#039; =&gt; &#039;audio/midi&#039;,
		&#039;midi&#039; =&gt; &#039;audio/midi&#039;,
		&#039;mp2&#039; =&gt; &#039;audio/mpeg&#039;,
		&#039;mp3&#039; =&gt; &#039;audio/mpeg&#039;,
		&#039;mpga&#039; =&gt; &#039;audio/mpeg&#039;,
		&#039;ogg&#039; =&gt; &#039;audio/ogg&#039;,
		&#039;oga&#039; =&gt; &#039;audio/ogg&#039;,
		&#039;spx&#039; =&gt; &#039;audio/ogg&#039;,
		&#039;ra&#039; =&gt; &#039;audio/x-realaudio&#039;,
		&#039;ram&#039; =&gt; &#039;audio/x-pn-realaudio&#039;,
		&#039;rm&#039; =&gt; &#039;audio/x-pn-realaudio&#039;,
		&#039;rpm&#039; =&gt; &#039;audio/x-pn-realaudio-plugin&#039;,
		&#039;snd&#039; =&gt; &#039;audio/basic&#039;,
		&#039;tsi&#039; =&gt; &#039;audio/TSP-audio&#039;,
		&#039;wav&#039; =&gt; &#039;audio/x-wav&#039;,
		&#039;aac&#039; =&gt; &#039;audio/aac&#039;,
		&#039;asc&#039; =&gt; &#039;text/plain&#039;,
		&#039;c&#039; =&gt; &#039;text/plain&#039;,
		&#039;cc&#039; =&gt; &#039;text/plain&#039;,
		&#039;css&#039; =&gt; &#039;text/css&#039;,
		&#039;etx&#039; =&gt; &#039;text/x-setext&#039;,
		&#039;f&#039; =&gt; &#039;text/plain&#039;,
		&#039;f90&#039; =&gt; &#039;text/plain&#039;,
		&#039;h&#039; =&gt; &#039;text/plain&#039;,
		&#039;hh&#039; =&gt; &#039;text/plain&#039;,
		&#039;htm&#039; =&gt; array(
			(int) 0 =&gt; &#039;text/html&#039;,
			(int) 1 =&gt; &#039;*/*&#039;
		),
		&#039;ics&#039; =&gt; &#039;text/calendar&#039;,
		&#039;m&#039; =&gt; &#039;text/plain&#039;,
		&#039;rtf&#039; =&gt; &#039;text/rtf&#039;,
		&#039;rtx&#039; =&gt; &#039;text/richtext&#039;,
		&#039;sgm&#039; =&gt; &#039;text/sgml&#039;,
		&#039;sgml&#039; =&gt; &#039;text/sgml&#039;,
		&#039;tsv&#039; =&gt; &#039;text/tab-separated-values&#039;,
		&#039;tpl&#039; =&gt; &#039;text/template&#039;,
		&#039;txt&#039; =&gt; &#039;text/plain&#039;,
		&#039;text&#039; =&gt; &#039;text/plain&#039;,
		&#039;avi&#039; =&gt; &#039;video/x-msvideo&#039;,
		&#039;fli&#039; =&gt; &#039;video/x-fli&#039;,
		&#039;mov&#039; =&gt; &#039;video/quicktime&#039;,
		&#039;movie&#039; =&gt; &#039;video/x-sgi-movie&#039;,
		&#039;mpe&#039; =&gt; &#039;video/mpeg&#039;,
		&#039;mpeg&#039; =&gt; &#039;video/mpeg&#039;,
		&#039;mpg&#039; =&gt; &#039;video/mpeg&#039;,
		&#039;qt&#039; =&gt; &#039;video/quicktime&#039;,
		&#039;viv&#039; =&gt; &#039;video/vnd.vivo&#039;,
		&#039;vivo&#039; =&gt; &#039;video/vnd.vivo&#039;,
		&#039;ogv&#039; =&gt; &#039;video/ogg&#039;,
		&#039;webm&#039; =&gt; &#039;video/webm&#039;,
		&#039;mp4&#039; =&gt; &#039;video/mp4&#039;,
		&#039;m4v&#039; =&gt; &#039;video/mp4&#039;,
		&#039;f4v&#039; =&gt; &#039;video/mp4&#039;,
		&#039;f4p&#039; =&gt; &#039;video/mp4&#039;,
		&#039;m4a&#039; =&gt; &#039;audio/mp4&#039;,
		&#039;f4a&#039; =&gt; &#039;audio/mp4&#039;,
		&#039;f4b&#039; =&gt; &#039;audio/mp4&#039;,
		&#039;gif&#039; =&gt; &#039;image/gif&#039;,
		&#039;ief&#039; =&gt; &#039;image/ief&#039;,
		&#039;jpg&#039; =&gt; &#039;image/jpeg&#039;,
		&#039;jpeg&#039; =&gt; &#039;image/jpeg&#039;,
		&#039;jpe&#039; =&gt; &#039;image/jpeg&#039;,
		&#039;pbm&#039; =&gt; &#039;image/x-portable-bitmap&#039;,
		&#039;pgm&#039; =&gt; &#039;image/x-portable-graymap&#039;,
		&#039;png&#039; =&gt; &#039;image/png&#039;,
		&#039;pnm&#039; =&gt; &#039;image/x-portable-anymap&#039;,
		&#039;ppm&#039; =&gt; &#039;image/x-portable-pixmap&#039;,
		&#039;ras&#039; =&gt; &#039;image/cmu-raster&#039;,
		&#039;rgb&#039; =&gt; &#039;image/x-rgb&#039;,
		&#039;tif&#039; =&gt; &#039;image/tiff&#039;,
		&#039;tiff&#039; =&gt; &#039;image/tiff&#039;,
		&#039;xbm&#039; =&gt; &#039;image/x-xbitmap&#039;,
		&#039;xpm&#039; =&gt; &#039;image/x-xpixmap&#039;,
		&#039;xwd&#039; =&gt; &#039;image/x-xwindowdump&#039;,
		&#039;psd&#039; =&gt; array(
			(int) 0 =&gt; &#039;application/photoshop&#039;,
			(int) 1 =&gt; &#039;application/psd&#039;,
			(int) 2 =&gt; &#039;image/psd&#039;,
			(int) 3 =&gt; &#039;image/x-photoshop&#039;,
			(int) 4 =&gt; &#039;image/photoshop&#039;,
			(int) 5 =&gt; &#039;zz-application/zz-winassoc-psd&#039;
		),
		&#039;ice&#039; =&gt; &#039;x-conference/x-cooltalk&#039;,
		&#039;iges&#039; =&gt; &#039;model/iges&#039;,
		&#039;igs&#039; =&gt; &#039;model/iges&#039;,
		&#039;mesh&#039; =&gt; &#039;model/mesh&#039;,
		&#039;msh&#039; =&gt; &#039;model/mesh&#039;,
		&#039;silo&#039; =&gt; &#039;model/mesh&#039;,
		&#039;vrml&#039; =&gt; &#039;model/vrml&#039;,
		&#039;wrl&#039; =&gt; &#039;model/vrml&#039;,
		&#039;mime&#039; =&gt; &#039;www/mime&#039;,
		&#039;pdb&#039; =&gt; &#039;chemical/x-pdb&#039;,
		&#039;xyz&#039; =&gt; &#039;chemical/x-pdb&#039;,
		&#039;javascript&#039; =&gt; &#039;application/javascript&#039;,
		&#039;form&#039; =&gt; &#039;application/x-www-form-urlencoded&#039;,
		&#039;file&#039; =&gt; &#039;multipart/form-data&#039;,
		&#039;xhtml&#039; =&gt; array(
			(int) 0 =&gt; &#039;application/xhtml+xml&#039;,
			(int) 1 =&gt; &#039;application/xhtml&#039;,
			(int) 2 =&gt; &#039;text/xhtml&#039;
		),
		&#039;xhtml-mobile&#039; =&gt; &#039;application/vnd.wap.xhtml+xml&#039;,
		&#039;atom&#039; =&gt; &#039;application/atom+xml&#039;,
		&#039;amf&#039; =&gt; &#039;application/x-amf&#039;,
		&#039;wap&#039; =&gt; array(
			(int) 0 =&gt; &#039;text/vnd.wap.wml&#039;,
			(int) 1 =&gt; &#039;text/vnd.wap.wmlscript&#039;,
			(int) 2 =&gt; &#039;image/vnd.wap.wbmp&#039;
		),
		&#039;wml&#039; =&gt; &#039;text/vnd.wap.wml&#039;,
		&#039;wmlscript&#039; =&gt; &#039;text/vnd.wap.wmlscript&#039;,
		&#039;wbmp&#039; =&gt; &#039;image/vnd.wap.wbmp&#039;,
		&#039;woff&#039; =&gt; &#039;application/x-font-woff&#039;,
		&#039;webp&#039; =&gt; &#039;image/webp&#039;,
		&#039;appcache&#039; =&gt; &#039;text/cache-manifest&#039;,
		&#039;manifest&#039; =&gt; &#039;text/cache-manifest&#039;,
		&#039;htc&#039; =&gt; &#039;text/x-component&#039;,
		&#039;rdf&#039; =&gt; &#039;application/xml&#039;,
		&#039;crx&#039; =&gt; &#039;application/x-chrome-extension&#039;,
		&#039;oex&#039; =&gt; &#039;application/x-opera-extension&#039;,
		&#039;xpi&#039; =&gt; &#039;application/x-xpinstall&#039;,
		&#039;safariextz&#039; =&gt; &#039;application/octet-stream&#039;,
		&#039;webapp&#039; =&gt; &#039;application/x-web-app-manifest+json&#039;,
		&#039;vcf&#039; =&gt; &#039;text/x-vcard&#039;,
		&#039;vtt&#039; =&gt; &#039;text/vtt&#039;,
		&#039;mkv&#039; =&gt; &#039;video/x-matroska&#039;,
		&#039;pkpass&#039; =&gt; &#039;application/vnd.apple.pkpass&#039;,
		&#039;ajax&#039; =&gt; &#039;text/html&#039;
	)
	[protected] _protocol =&gt; &#039;HTTP/1.1&#039;
	[protected] _status =&gt; (int) 200
	[protected] _contentType =&gt; &#039;text/html&#039;
	[protected] _headers =&gt; array()
	[protected] _body =&gt; null
	[protected] _file =&gt; null
	[protected] _fileRange =&gt; null
	[protected] _charset =&gt; &#039;UTF-8&#039;
	[protected] _cacheDirectives =&gt; array()
	[protected] _cookies =&gt; array()
}</pre></div></li>
</ul>
<script type="text/javascript">
function traceToggle(event, id) {
	var el = document.getElementById(id);
	el.style.display = (el.style.display === 'block') ? 'none' : 'block';
	event.preventDefault();
	return false;
}
</script>
            </div>
                        </main>
    </body>
</html>